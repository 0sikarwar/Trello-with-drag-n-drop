{"version":3,"sources":["Components/Modal.jsx","Components/AddCard.jsx","Components/Card.jsx","Components/List.jsx","Containers/ListContainer.jsx","Components/AddList.jsx","Containers/BoardContainer.jsx","App.jsx","index.js"],"names":["Modal","props","heading","onClose","children","className","onClick","AddCard","handleAddCard","setShowAddCardModal","useState","validationObj","setValidationObj","name","setName","desc","setdesc","htmlFor","value","onChange","e","target","Card","handleRmoveCard","handleCardDrag","onDragStart","draggable","List","cards","handleRemoveList","listIndex","showAddCardModal","onDrop","preventDefault","cardData","JSON","parse","dataTransfer","getData","index","prevListIndex","onDragOver","map","item","key","setData","stringify","card","ListContainer","todoList","setTodoList","currentList","undefined","cardToAdd","unshift","push","splice","cardIndex","AddList","setShowAddListModal","title","setTitle","initialCardObj","BoardContainer","showAddListModal","useEffect","window","localStorage","temp","getItem","setItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAkBeA,EAhBD,SAACC,GAAW,IAChBC,EAA+BD,EAA/BC,QAASC,EAAsBF,EAAtBE,QAASC,EAAaH,EAAbG,SAE1B,OACE,qBAAKC,UAAU,SAAf,SACE,sBAAKA,UAAU,QAAf,UACGH,GAAW,6BAAKA,IACjB,sBAAMG,UAAU,QAAQC,QAASH,EAAjC,kBAGA,qBAAKE,UAAU,UAAf,SAA0BD,UCsCnBG,EA/CC,SAACN,GAAW,IAClBO,EAAuCP,EAAvCO,cAAeC,EAAwBR,EAAxBQ,oBADE,EAEiBC,mBAAS,IAF1B,mBAElBC,EAFkB,KAEHC,EAFG,OAGDF,mBAAS,IAHR,mBAGlBG,EAHkB,KAGZC,EAHY,OAIDJ,mBAAS,IAJR,mBAIlBK,EAJkB,KAIZC,EAJY,KAczB,OACE,eAAC,EAAD,CACEb,QAAS,kBAAMM,GAAoB,IACnCP,QAAQ,sBAFV,UAIE,uBAAOe,QAAQ,OAAf,uBACA,uBACEJ,KAAK,OACLK,MAAOL,EACPM,SAAU,SAACC,GACTN,EAAQM,EAAEC,OAAOH,OACjBN,EAAiB,2BAAKD,GAAN,IAAqBE,MAAM,MAE7CR,UAAWM,EAAcE,KAAO,QAAU,KAE5C,uBACA,uBAAOI,QAAQ,OAAf,8BACA,0BACEJ,KAAK,OACLK,MAAOH,EACPI,SAAU,SAACC,GACTJ,EAAQI,EAAEC,OAAOH,OACjBN,EAAiB,2BAAKD,GAAN,IAAqBI,MAAM,MAE7CV,UAAWM,EAAcI,KAAO,QAAU,KAE5C,uBAEA,wBAAQT,QApCe,WACrBO,GAAQE,IACVP,EAAc,CAAEK,OAAME,SACtBN,GAAoB,IAEtBG,EAAiB,CAAEG,MAAOA,EAAMF,MAAOA,KA+BrC,6BC9BSS,EAfF,SAACrB,GAAW,IACfY,EAAgDZ,EAAhDY,KAAME,EAA0Cd,EAA1Cc,KAAMQ,EAAoCtB,EAApCsB,gBAAiBC,EAAmBvB,EAAnBuB,eACrC,OACE,sBAAKnB,UAAU,OAAOoB,YAAaD,EAAgBE,WAAS,EAA5D,UACE,sBAAKrB,UAAU,YAAf,UACE,6BAAKQ,IACL,sBAAMR,UAAU,YAAYC,QAASiB,EAArC,kBAIF,qBAAKlB,UAAU,YAAf,SAA4BU,QCuDnBY,EA7DF,SAAC1B,GAAW,IAErBY,EAMEZ,EANFY,KACAe,EAKE3B,EALF2B,MACApB,EAIEP,EAJFO,cACAqB,EAGE5B,EAHF4B,iBACAN,EAEEtB,EAFFsB,gBACAO,EACE7B,EADF6B,UAPoB,EAS0BpB,oBAAS,GATnC,mBASfqB,EATe,KASGtB,EATH,KA6BtB,OACE,sBAAKJ,UAAU,OAAO2B,OAnBL,SAACZ,GAClBA,EAAEa,iBACF,IAAMC,EAAWC,KAAKC,MAAMhB,EAAEiB,aAAaC,QAAQ,SACnD9B,EAAc0B,EAASK,MAAOT,EAAWI,EAASM,eAClDjB,EAAgBW,EAASK,MAAOL,EAASM,gBAeCC,WAZrB,SAACrB,GACtBA,EAAEa,kBAWF,UACE,sBAAK5B,UAAU,YAAf,UACE,6BAAKQ,IACL,uBACA,sBAAMR,UAAU,YAAYC,QAAS,kBAAMuB,EAAiBC,IAA5D,kBAIF,8BACGF,EAAMc,KAAI,SAACC,EAAMJ,GAAP,OACT,wBAAC,EAAD,2BACMI,GADN,IAEEC,IAAKL,EACLhB,gBAAiB,kBAAMA,EAAgBgB,EAAOT,IAC9CN,eAAgB,SAACJ,GAAD,OAtBH,SAACA,EAAGmB,GACzBnB,EAAEiB,aAAaQ,QACb,OACAV,KAAKW,UAAU,CAAEN,cAAeV,EAAWS,WAmBdf,CAAeJ,EAAGmB,YAI/C,qBAAKlC,UAAU,eAAeC,QAAS,kBAAMG,GAAoB,IAAjE,eAGCsB,GACC,cAAC,EAAD,CACEtB,oBAAqBA,EACrBD,cAAe,SAACuC,GAAD,OAAUvC,EAAcuC,EAAMjB,UCdxCkB,EA1CO,SAAC/C,GAAW,IACxBgD,EAA0BhD,EAA1BgD,SAAUC,EAAgBjD,EAAhBiD,YAEZ1C,EAAgB,SAACuC,EAAMjB,EAAWU,GACtC,IAAMW,EAAW,YAAOF,GACxB,QAAsBG,IAAlBZ,EAA6B,CAC/B,IAAMa,EAAYF,EAAYX,GAAeZ,MAAMmB,GACnDI,EAAYrB,GAAWF,MAAM0B,QAAQD,QAErCF,EAAYrB,GAAWF,MAAM2B,KAAKR,GAEpCG,EAAYC,IAGRtB,EAAmB,SAACC,GACxB,IAAMqB,EAAW,YAAOF,GACxBE,EAAYK,OAAO1B,EAAW,GAC9BoB,EAAYC,IAGR5B,EAAkB,SAACkC,EAAW3B,GAClC,IAAMqB,EAAW,YAAOF,GACxBE,EAAYrB,GAAWF,MAAM4B,OAAOC,EAAW,GAC/CP,EAAYC,IAGd,OACE,qBAAK9C,UAAU,gBAAf,SACG4C,EAASP,KAAI,SAACC,EAAMJ,GAAP,OACZ,wBAAC,EAAD,2BACMI,GADN,IAEEC,IAAKL,EACL/B,cAAeA,EACfqB,iBAAkBA,EAClBN,gBAAiBA,EACjBO,UAAWS,WCGNmB,EArCC,SAACzD,GAAW,IAClBgD,EAA+ChD,EAA/CgD,SAAUC,EAAqCjD,EAArCiD,YAAaS,EAAwB1D,EAAxB0D,oBADN,EAEiBjD,mBAAS,IAF1B,mBAElBC,EAFkB,KAEHC,EAFG,OAGCF,mBAAS,IAHV,mBAGlBkD,EAHkB,KAGXC,EAHW,KAiBzB,OACE,eAAC,EAAD,CACE1D,QAAS,kBAAMwD,GAAoB,IACnCzD,QAAQ,sBAFV,UAIE,uBAAOe,QAAQ,QAAf,wBACA,uBACEJ,KAAK,QACLK,MAAO0C,EACPzC,SAAU,SAACC,GACTyC,EAASzC,EAAEC,OAAOH,OAClBN,EAAiB,CAAEgD,OAAO,KAE5BvD,UAAWM,EAAciD,MAAQ,QAAU,KAE7C,wBAAQtD,QA3Ba,WACvB,GAAIsD,EAAO,CACT,IAAME,EAAiB,CACrBjD,KAAM+C,EACNhC,MAAO,IAETsB,EAAY,GAAD,mBAAKD,GAAL,CAAea,KAC1BH,GAAoB,GAEtB/C,EAAiB,CAAEgD,OAAQA,KAkBzB,6BCISG,EApCQ,WAAO,IAAD,EACKrD,mBAAS,IADd,mBACpBuC,EADoB,KACVC,EADU,OAEqBxC,oBAAS,GAF9B,mBAEpBsD,EAFoB,KAEFL,EAFE,KAiB3B,OAbAM,qBAAU,WACR,GAAIC,OAAOC,aAAc,CACvB,IAAMC,EAAOD,aAAaE,QAAQ,YAClCD,GAAQlB,EAAYf,KAAKC,MAAMgC,OAEhC,IAEHH,qBAAU,WACJC,OAAOC,cACTA,aAAaG,QAAQ,WAAYnC,KAAKW,UAAUG,MAEjD,CAACA,IAGF,sBAAK5C,UAAU,iBAAf,UACE,cAAC,EAAD,CAAe4C,SAAUA,EAAUC,YAAaA,IAChD,wBACE7C,UAAU,eACVC,QAAS,kBAAMqD,GAAoB,IAFrC,sBAMCK,GACC,cAAC,EAAD,CACEf,SAAUA,EACVC,YAAaA,EACbS,oBAAqBA,QCtBhBY,G,MATH,WACV,OACE,sBAAKlE,UAAU,MAAf,UACE,oBAAIA,UAAU,eAAd,0BACA,cAAC,EAAD,SCDNmE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4fd66cf0.chunk.js","sourcesContent":["import \"../styles/modal.css\";\n\nconst Modal = (props) => {\n  const { heading, onClose, children } = props;\n\n  return (\n    <div className=\"screen\">\n      <div className=\"modal\">\n        {heading && <h2>{heading}</h2>}\n        <span className=\"close\" onClick={onClose}>\n          &times;\n        </span>\n        <div className=\"content\">{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import { useState } from \"react\";\nimport Modal from \"./Modal\";\n\nconst AddCard = (props) => {\n  const { handleAddCard, setShowAddCardModal } = props;\n  const [validationObj, setValidationObj] = useState({});\n  const [name, setName] = useState(\"\");\n  const [desc, setdesc] = useState(\"\");\n\n  const handleAddCardClick = () => {\n    if (name && desc) {\n      handleAddCard({ name, desc });\n      setShowAddCardModal(false);\n    }\n    setValidationObj({ desc: !desc, name: !name });\n  };\n\n  return (\n    <Modal\n      onClose={() => setShowAddCardModal(false)}\n      heading=\"Add a new list type\"\n    >\n      <label htmlFor=\"name\">Card name</label>\n      <input\n        name=\"name\"\n        value={name}\n        onChange={(e) => {\n          setName(e.target.value);\n          setValidationObj({ ...validationObj, name: false });\n        }}\n        className={validationObj.name ? \"error\" : \"\"}\n      />\n      <br />\n      <label htmlFor=\"desc\">Card Description</label>\n      <textarea\n        name=\"desc\"\n        value={desc}\n        onChange={(e) => {\n          setdesc(e.target.value);\n          setValidationObj({ ...validationObj, desc: false });\n        }}\n        className={validationObj.desc ? \"error\" : \"\"}\n      />\n      <br />\n\n      <button onClick={handleAddCardClick}>Create card</button>\n    </Modal>\n  );\n};\n\nexport default AddCard;\n","const Card = (props) => {\n  const { name, desc, handleRmoveCard, handleCardDrag } = props;\n  return (\n    <div className=\"card\" onDragStart={handleCardDrag} draggable>\n      <div className=\"card-name\">\n        <h4>{name}</h4>\n        <span className=\"cross-btn\" onClick={handleRmoveCard}>\n          X\n        </span>\n      </div>\n      <div className=\"card-desc\">{desc}</div>\n    </div>\n  );\n};\n\nexport default Card;\n","import { useState } from \"react\";\nimport AddCard from \"./AddCard\";\nimport Card from \"./Card\";\n\nconst List = (props) => {\n  const {\n    name,\n    cards,\n    handleAddCard,\n    handleRemoveList,\n    handleRmoveCard,\n    listIndex,\n  } = props;\n  const [showAddCardModal, setShowAddCardModal] = useState(false);\n\n  const handleDrop = (e) => {\n    e.preventDefault();\n    const cardData = JSON.parse(e.dataTransfer.getData(\"card\"));\n    handleAddCard(cardData.index, listIndex, cardData.prevListIndex);\n    handleRmoveCard(cardData.index, cardData.prevListIndex);\n  };\n\n  const handleDropOver = (e) => {\n    e.preventDefault();\n  };\n\n  const handleCardDrag = (e, index) => {\n    e.dataTransfer.setData(\n      \"card\",\n      JSON.stringify({ prevListIndex: listIndex, index })\n    );\n  };\n\n  return (\n    <div className=\"list\" onDrop={handleDrop} onDragOver={handleDropOver}>\n      <div className=\"list-name\">\n        <h3>{name}</h3>\n        <hr />\n        <span className=\"cross-btn\" onClick={() => handleRemoveList(listIndex)}>\n          X\n        </span>\n      </div>\n      <div>\n        {cards.map((item, index) => (\n          <Card\n            {...item}\n            key={index}\n            handleRmoveCard={() => handleRmoveCard(index, listIndex)}\n            handleCardDrag={(e) => handleCardDrag(e, index)}\n          />\n        ))}\n      </div>\n      <div className=\"add-card-btn\" onClick={() => setShowAddCardModal(true)}>\n        +\n      </div>\n      {showAddCardModal && (\n        <AddCard\n          setShowAddCardModal={setShowAddCardModal}\n          handleAddCard={(card) => handleAddCard(card, listIndex)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default List;\n","import List from \"../Components/List\";\n\nconst ListContainer = (props) => {\n  const { todoList, setTodoList } = props;\n\n  const handleAddCard = (card, listIndex, prevListIndex) => {\n    const currentList = [...todoList];\n    if (prevListIndex !== undefined) {\n      const cardToAdd = currentList[prevListIndex].cards[card];\n      currentList[listIndex].cards.unshift(cardToAdd);\n    } else {\n      currentList[listIndex].cards.push(card);\n    }\n    setTodoList(currentList);\n  };\n\n  const handleRemoveList = (listIndex) => {\n    const currentList = [...todoList];\n    currentList.splice(listIndex, 1);\n    setTodoList(currentList);\n  };\n\n  const handleRmoveCard = (cardIndex, listIndex) => {\n    const currentList = [...todoList];\n    currentList[listIndex].cards.splice(cardIndex, 1);\n    setTodoList(currentList);\n  };\n\n  return (\n    <div className=\"listContainer\">\n      {todoList.map((item, index) => (\n        <List\n          {...item}\n          key={index}\n          handleAddCard={handleAddCard}\n          handleRemoveList={handleRemoveList}\n          handleRmoveCard={handleRmoveCard}\n          listIndex={index}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default ListContainer;\n","import { useState } from \"react\";\nimport Modal from \"./Modal\";\n\nconst AddList = (props) => {\n  const { todoList, setTodoList, setShowAddListModal } = props;\n  const [validationObj, setValidationObj] = useState({});\n  const [title, setTitle] = useState(\"\");\n\n  const handleCreateList = () => {\n    if (title) {\n      const initialCardObj = {\n        name: title,\n        cards: [],\n      };\n      setTodoList([...todoList, initialCardObj]);\n      setShowAddListModal(false);\n    }\n    setValidationObj({ title: !title });\n  };\n\n  return (\n    <Modal\n      onClose={() => setShowAddListModal(false)}\n      heading=\"Add a new list type\"\n    >\n      <label htmlFor=\"title\">List Title</label>\n      <input\n        name=\"title\"\n        value={title}\n        onChange={(e) => {\n          setTitle(e.target.value);\n          setValidationObj({ title: false });\n        }}\n        className={validationObj.title ? \"error\" : \"\"}\n      />\n      <button onClick={handleCreateList}>Create List</button>\n    </Modal>\n  );\n};\n\nexport default AddList;\n","import { useEffect, useState } from \"react\";\nimport ListContainer from \"./ListContainer\";\nimport AddList from \"../Components/AddList\";\nconst BoardContainer = () => {\n  const [todoList, setTodoList] = useState([]);\n  const [showAddListModal, setShowAddListModal] = useState(false);\n\n  useEffect(() => {\n    if (window.localStorage) {\n      const temp = localStorage.getItem(\"todoList\");\n      temp && setTodoList(JSON.parse(temp));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (window.localStorage) {\n      localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n    }\n  }, [todoList]);\n\n  return (\n    <div className=\"boardContainer\">\n      <ListContainer todoList={todoList} setTodoList={setTodoList} />\n      <button\n        className=\"add-list-btn\"\n        onClick={() => setShowAddListModal(true)}\n      >\n        Add list\n      </button>\n      {showAddListModal && (\n        <AddList\n          todoList={todoList}\n          setTodoList={setTodoList}\n          setShowAddListModal={setShowAddListModal}\n        />\n      )}\n    </div>\n  );\n};\nexport default BoardContainer;\n","import Trello from \"./Containers/BoardContainer\";\nimport \"./styles/app.css\";\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <h2 className=\"boardHeading\">Trello Board</h2>\n      <Trello />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}